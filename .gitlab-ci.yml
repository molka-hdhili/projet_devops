variables:
  DOCKER_DRIVER: overlay2

stages:
  - build
  - deploy

build_backend:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - docker build -t "$CI_REGISTRY_IMAGE/backend:$CI_COMMIT_SHORT_SHA" ./backend
    - docker push "$CI_REGISTRY_IMAGE/backend:$CI_COMMIT_SHORT_SHA"
    - docker tag "$CI_REGISTRY_IMAGE/backend:$CI_COMMIT_SHORT_SHA" "$CI_REGISTRY_IMAGE/backend:latest"
    - docker push "$CI_REGISTRY_IMAGE/backend:latest"
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"

build_frontend:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - docker build -t "$CI_REGISTRY_IMAGE/frontend:$CI_COMMIT_SHORT_SHA" ./frontend
    - docker push "$CI_REGISTRY_IMAGE/frontend:$CI_COMMIT_SHORT_SHA"
    - docker tag "$CI_REGISTRY_IMAGE/frontend:$CI_COMMIT_SHORT_SHA" "$CI_REGISTRY_IMAGE/frontend:latest"
    - docker push "$CI_REGISTRY_IMAGE/frontend:latest"
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"

deploy_kubernetes:
  stage: deploy
  image:
    name: lachlanevenson/k8s-kubectl:latest
    entrypoint: [""]
  script:
    - echo "DÃ©ploiement Kubernetes en cours..."
    - kubectl get nodes
    - kubectl get pods --all-namespaces
    - kubectl apply -f k8s/
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
      when: on_success
  tags:
    - local
